<project name="RENT" basedir="." default="build">

	<!-- project-specific variables -->
	<property name="app.name" value="rent" />
	<property name="package.name" value="${app.name}.war" />
	<property name="web.dir" value="." />
	<property name="src.dir" value="${web.dir}/src" />
	<property name="test.dir" value="${web.dir}/test" />
	<property name="webroot.dir" value="${web.dir}/WebContent" />
	<property name="dest.dir" value="build" />
	<property name="class.dir" value="${dest.dir}/classes" />
	<property name="lib.dir" value="${webroot.dir}/WEB-INF/lib" />
	<property name="webroot.class.dir" value="${webroot.dir}/WEB-INF/" />
	<property name="yuicompressor" value="${web.dir}/tools/yuicompressor-2.4.7.jar" />
	<property name="src.dir.css" value="${webroot.dir}/css" />
	<property name="dist.dir.css" value="${dest.dir}/css" />
	<property name="reports.tests" value="build" />
	<property name="src.dir.js" value="${webroot.dir}/js" />
	<property name="dist.dir.js" value="${dest.dir}/js" />
	

	<path id="build.lib.path">
		<fileset dir="${lib.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<target name="clean">
		<echo>=== Clean ===</echo>
		<delete failonerror="false">
			<fileset dir="${dest.dir}" includes="**/*"/>
		</delete>
		<delete failonerror="false" dir="${class.dir}"/>
	</target>

	<target name="prepare" depends="clean">
		<mkdir dir="${dest.dir}" />
		<mkdir dir="${class.dir}"/>
		<mkdir dir="${lib.dir}"/>
		<mkdir dir="${dist.dir.css}"/>
		<mkdir dir="${dist.dir.js}"/>
		<mkdir dir="${dist.dir.js}/libs/backbone"/>
		<mkdir dir="${dist.dir.js}/libs/bootstrap"/>
		<mkdir dir="${dist.dir.js}/libs/facebook"/>
		<mkdir dir="${dist.dir.js}/libs/facebook"/>
		<mkdir dir="${dist.dir.js}/libs/jquery"/>
		<mkdir dir="${dist.dir.js}/libs/jquery-cookie"/>
		<mkdir dir="${dist.dir.js}/libs/jquery-datepicker"/>
		<mkdir dir="${dist.dir.js}/libs/jquery-i18n"/>
		<mkdir dir="${dist.dir.js}/libs/jquery-ui"/>
		<mkdir dir="${dist.dir.js}/libs/jquery-validate"/>
		<mkdir dir="${dist.dir.js}/libs/log4javascript"/>
		<mkdir dir="${dist.dir.js}/libs/mustache"/>
		<mkdir dir="${dist.dir.js}/libs/rent-common"/>
		<mkdir dir="${dist.dir.js}/libs/require"/>
		<mkdir dir="${dist.dir.js}/libs/underscore"/>
		<mkdir dir="${dist.dir.js}/libs/google"/>
		<mkdir dir="${dist.dir.js}/modules/backyard"/>
		<mkdir dir="${dist.dir.js}/modules/general"/>
		<mkdir dir="${dist.dir.js}/modules/home"/>
		<mkdir dir="${dist.dir.js}/modules/main"/>
		<mkdir dir="${dist.dir.js}/modules/user"/>
		<mkdir dir="${dist.dir.js}/modules/google"/>
		
		
		
	</target>

	<!-- COMPILE -->
	<target name="compile" depends="prepare">
		<echo>=== COMPILE ===</echo>

		<echo>Compiling ${src.dir} files ...</echo>
		<javac srcdir="${src.dir}" destdir="${class.dir}" includes="**/*" source="1.6" target="1.6" debug="off">
			<classpath refid="build.lib.path" />
		</javac>

		<javac srcdir="${test.dir}" destdir="${class.dir}" includes="**/*" source="1.6" target="1.6" debug="off">
			<classpath refid="build.lib.path" />
		</javac>

		<echo>Copy ${src.dir} resources files ...</echo>
		<copy todir="${class.dir}">
			<fileset dir="${src.dir}">
				<include name="**/*.xml"/>
				<include name="**/*.yaml"/>
				<include name="**/*.properties"/>
				<include name="META-INF/**"/>
			</fileset>
		</copy>
	</target>



	<target name="copy">
		<echo>=== Copy compiled files to ${webroot.class.dir}... ===</echo>
		<copy todir="${webroot.class.dir}">
			<fileset dir="${dest.dir}">
				<include name="**/*" />
			        <exclude name="**/*Test*"/>
			        <exclude name="**/*war"/>
			</fileset>
		</copy>
	</target>

	<!-- PACKAGE -->
	<target name="build" depends="copy">
		<echo>=== Build War Package ===</echo>
		<war destfile="${dest.dir}/${package.name}" webxml="${webroot.class.dir}/web.xml" basedir="${webroot.dir}" />
	</target>

	<target name="junit"  depends="compile">
		<junit printsummary="yes" haltonfailure="yes">
			<classpath refid="build.lib.path" />
			<classpath>
				<pathelement path="${class.dir}"/>
			</classpath>

			<formatter type="plain"/>
			<batchtest fork="yes" todir="${reports.tests}">
				<fileset dir="${test.dir}">
					<include name="**/*Test*.java"/>
					<exclude name="**/AllTests.java"/>
				</fileset>
			</batchtest>
		</junit>
	</target>
    <target name="css.compress" depends="prepare">
        <echo>=== Compressing CSS... ===</echo>
        <apply executable="java" verbose="true" failonerror="true" dest="${dist.dir.css}">
            <fileset dir="${src.dir.css}" includes="**/*.css" />
            <arg value="-jar" />
            <arg value="${yuicompressor}" />
            <arg value="--type" />
            <arg value="css" />
            <arg value="-v" />
            <arg value="-o" />
            <targetfile />
            <mapper type="glob" from="*.css" to="*.css" />
            <srcfile />
        </apply>
    </target>
	
    <target name="js.compress" depends="css.compress">
        <echo>=== Compressing JS... ===</echo>
        <apply executable="java" verbose="true" failonerror="true" dest="${dist.dir.js}">
            <fileset dir="${src.dir.js}" includes="**/*.js">
                <include name="**/*.js" />
                <exclude name="libs/*/*min*.js" />
            </fileset>
            <arg value="-jar" />
            <arg value="${yuicompressor}" />
            <arg value="--type" />
            <arg value="js" />
            <arg value="-v" />
            <arg value="-o" />
            <targetfile />
            <mapper type="glob" from="*.js" to="*.js" />
            <srcfile />
        </apply>
    </target>	
    <target name="convert">
        <apply executable="node" relative="true" dest="build/" >
            <fileset dir="WebContent/html" >
	         <include name="**/*.phtml" />
            </fileset>
            <arg value="r.js" />
            <arg value="-o" />
            <arg value="baseUrl=WebContent/js" />
            <arg value="paths.template=../html" />
            <arg value="excludeShallow=text" />
            <srcfile prefix="name=text!template/" suffix=""/>
	    <targetfile prefix="out=build/html/" suffix=""/>
            <mapper type="glob" from="*.html" to="*.html.js"/>               
        </apply>
    </target>
</project>
